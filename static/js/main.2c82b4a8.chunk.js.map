{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","value","setValue","results","setResults","total","setTotal","className","class","type","name","placeholder","onChange","e","target","href","onClick","fetch","then","res","json","data","console","log","id","map","item","src","urls","regular","for","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kQA0FeA,MAnFf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA0BJ,mBAAS,IAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAkBA,OACE,sBAAKC,UAAU,MAAf,UAEE,sBAAKC,MAAM,aAAX,UACE,uBACEC,KAAK,OACLD,MAAM,aACNE,KAAK,GACLC,YAAY,uBACZV,MAAOA,EACPW,SAAU,SAACC,GAAD,OAAOX,EAASW,EAAEC,OAAOb,UAErC,mBAAGc,KAAK,IAAIP,MAAM,aAAlB,SACE,wBAAQQ,QAAS,WAxBvBC,MAAM,sGAAD,OACmGhB,EADnG,2BAGFiB,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLC,QAAQC,IAAIF,GACZC,QAAQC,IAAIF,EAAKhB,OACjBD,EAAWiB,EAAKlB,SAChBG,EAASe,EAAKhB,WAgB0BG,MAAM,UAAUC,KAAK,SAA3D,SACE,cAAC,IAAD,WAIN,8BAAIR,EAAJ,OACA,+BAAKI,EAAL,4BAmBA,sBAAKG,MAAM,sBAAX,UACE,uBAAOC,KAAK,WAAWe,GAAG,cAC1B,6BACGrB,EAAQsB,KAAI,SAACC,GAEZ,OACE,6BACE,qBAAKlB,MAAM,OAAqBmB,IAAKD,EAAKE,KAAKC,SAAxBH,EAAKF,WAKpC,wBAAOhB,MAAM,gBAAgBsB,IAAI,YAAjC,UACE,sBAAMtB,MAAM,WAAZ,uBACA,sBAAMA,MAAM,SAAZ,iCCpEKuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.2c82b4a8.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\n//access key:\n//Z4TT9B1mLYzJBO6Ew0GXZ2FfvKNzRHQSgnB5h8lviZo\n\nfunction App() {\n  const [value, setValue] = useState(\"\");\n  const [results, setResults] = useState([]);\n  const [total, setTotal] = useState(\"\");\n\n  //\n\n  //\n\n  const fetchImages = () => {\n    fetch(\n      `https://api.unsplash.com/search/photos?client_id=Z4TT9B1mLYzJBO6Ew0GXZ2FfvKNzRHQSgnB5h8lviZo&query=${value}&orientation=landscape`\n    )\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(data);\n        console.log(data.total);\n        setResults(data.results);\n        setTotal(data.total);\n      });\n  };\n  return (\n    <div className=\"App\">\n      {/* <form> */}\n      <div class=\"search-box\">\n        <input\n          type=\"text\"\n          class=\"search-txt\"\n          name=\"\"\n          placeholder=\"Search for photos...\"\n          value={value}\n          onChange={(e) => setValue(e.target.value)}\n        />\n        <a href=\"#\" class=\"search-btn\">\n          <button onClick={() => fetchImages()} class=\"btnIcon\" type=\"submit\">\n            <SearchIcon />\n          </button>\n        </a>\n      </div>\n      <p>{value} </p>\n      <h2>{total} Images has been found</h2>\n      {/* <div className=\"gallerydiv\">\n  <div className=\"gallery\">\n         {\n           results.map((item)=>{\n             return  <img class=\"item\" key={item.id} src={item.urls.regular} />\n                  \n             \n           })\n         \n         }  \n     \n                \n        \n         </div>\n         \n          </div> */}\n\n      {/*  */}\n      <div class=\"load-more-container\">\n        <input type=\"checkbox\" id=\"load-more\" />\n        <ul>\n          {results.map((item) => {\n            //  return  <li><img class=\"item\" key={item.id} src={item.urls.regular} style={{width:\"250px\"}}/></li>\n            return (\n              <li>\n                <img class=\"item\" key={item.id} src={item.urls.regular} />\n              </li>\n            );\n          })}\n        </ul>\n        <label class=\"load-more-btn\" for=\"load-more\">\n          <span class=\"unloaded\">Load More</span>\n          <span class=\"loaded\">View Less</span>\n        </label>\n      </div>\n      {/*  */}\n      {/* </form> */}\n      {/* ******* */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}